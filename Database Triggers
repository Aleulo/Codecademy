SELECT *
FROM customers
ORDER BY customer_id;

SELECT *
FROM customers_log;

create trigger log_change
before update on customers
for each row
EXECUTE PROCEDURE log_customers_change();

UPDATE customers
SET first_name = 'Steve'
WHERE last_name = 'Hall';

SELECT *
FROM customers
ORDER BY customer_id;

SELECT *
FROM customers_log;

UPDATE customers
SET years_old = 10
WHERE last_name = 'Hall';

SELECT *
FROM customers
ORDER BY customer_id;

SELECT *
FROM customers_log;

create trigger customer_insert
AFTER INSERT ON customers 
for each statement
 EXECUTE PROCEDURE log_customers_change();

INSERT INTO customers (first_name,last_name,years_old)
VALUES
    ('Jeffrey','Cook',66),
    ('Arthur','Turner',49),
    ('Nathan','Cooper',72);

SELECT *
FROM customers
ORDER BY customer_id;

SELECT *
FROM customers_log;

create trigger override_with_min_age 
before update on customers
for each row 
when (NEW.years_old <13)
EXECUTE PROCEDURE override_with_min_age();

update customers 
set years_old = 12
where last_name = 'Campbell';


update customers 
set years_old = 24
where last_name = 'Cook';

SELECT *
FROM customers
ORDER BY customer_id;

SELECT *
FROM customers_log;


UPDATE customers
SET years_old = 9,
    first_name = 'Dennis'
WHERE last_name = 'Hall';

SELECT *
FROM customers
ORDER BY customer_id;

SELECT *
FROM customers_log;

drop trigger if exists override_with_min_age on customers;
SELECT * FROM information_schema.triggers;








